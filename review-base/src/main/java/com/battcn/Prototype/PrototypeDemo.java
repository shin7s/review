package com.battcn.Prototype;import org.apache.commons.lang3.SerializationUtils;import java.util.ArrayList;import java.util.List;/** * 设计模式须知：模式不止适用于JAVA，它只是在某种程度下避免了复杂的设计 * <p> * 原型模式： * 优点： * 一：简化对象创建过程，通过拷贝的方式构建效率更高。 * 二：可以记录对象状态（备忘录），实现撤销回滚操作 * 缺点： * 一：clone 需内部实现，容易违背"开闭原则"(程序扩展,不应该修改原有代码) * 二：clone 只是浅克隆，深度克隆需要额外编码 * * @author Levin * @create 2017/10/27 0027 */public class PrototypeDemo {    public static void main(String[] args) throws Exception {        List<String> hobbies = new ArrayList<>();        hobbies.add("篮球");        hobbies.add("足球");        Customer original = new Customer(1, "淘宝客户-1", new Address("上海市"), hobbies);        Customer cloned = original.clone();        System.out.println("////////////////////////////////////////////////// 修改前原始信息信息 - 开始 //////////////////////////////////////////////////");        System.out.println("原始信息：" + original.toString());        System.out.println("拷贝信息：" + cloned.toString());        System.out.println("////////////////////////////////////////////////// 修改前原始信息信息 - 结束 //////////////////////////////////////////////////\n\n");        System.out.println("////////////////////////////////////////////////// 修改后原始信息信息 - 开始 //////////////////////////////////////////////////");        original.setName("淘宝客户-2");        original.getHobbies().add("音乐");        System.out.println("原始信息：" + original.toString());        System.out.println("拷贝信息：" + cloned.toString());        System.out.println("////////////////////////////////////////////////// 修改后原始信息信息 - 结束 //////////////////////////////////////////////////\n\n");        System.out.println("////////////////////////////////////////////////// 半深浅克隆 - 开始 //////////////////////////////////////////////////");        original.setAddress(new Address("北京市"));        Customer shallow = original.shallow();        System.out.println("浅克隆：" + shallow.toString());        Customer deep = original.deep();        original.setAddress(new Address("天津市"));        original.getHobbies().add("电影");        System.out.println("深克隆：" + deep.toString());        System.out.println("////////////////////////////////////////////////// 半深浅克隆 - 结束 //////////////////////////////////////////////////\n\n");        System.out.println("////////////////////////////////////////////////// 深浅克隆 - 开始 //////////////////////////////////////////////////");        Customer deepCopy = original.deepCopy();        original.setAddress(new Address("长沙市"));        original.getHobbies().add("乒乓球");        System.out.println("深克隆：" + deepCopy.toString());        Customer clone = SerializationUtils.clone(original);        original.setAddress(new Address("长沙"));        original.getHobbies().add("乒乓");        System.out.println(clone.toString());        System.out.println("////////////////////////////////////////////////// 深浅克隆 - 结束 //////////////////////////////////////////////////\n\n");    }}